@model juezprueba.Models.Problema

@{
    ViewBag.Title = "Resolver Problema";
}

<div class="container-fluid p-0" data-bs-theme="@(ViewBag.CurrentTheme ?? "dark")">
    <!-- Problema -->
    <div class="card mb-3 shadow-sm">
        <div class="card-header" style="background-color: #4a148c; color: white;">
            <h4 class="mb-0">@Model.Titulo</h4>
        </div>
        <div class="card-body p-3">
            @Html.Raw(Model.Descripcion)
        </div>
    </div>

    <!-- Editor con toolbar estilo IDE -->
    <form id="codeForm" method="post" asp-action="Resolver" asp-route-id="@Model.Id" class="card shadow-sm" style="height: 60vh;">
        <div class="card-header d-flex justify-content-between align-items-center bg-dark text-white py-1">
            <!-- Nombre del archivo editable -->
            <div class="d-flex align-items-center">
                <div class="input-group input-group-sm" style="width: 200px;">
                    <span class="input-group-text bg-secondary border-secondary text-light"><i class="bi bi-file-code"></i></span>
                    <input type="text" id="fileNameInput" class="form-control bg-dark text-white border-secondary" value="main.c">
                </div>
            </div>

            <!-- Toolbar principal -->
            <div class="d-flex align-items-center">
                <div class="btn-group me-2">
                    <button type="submit" id="btnRun" class="btn btn-sm btn-success" title="Ejecutar (F9)">
                        <i class="bi bi-play-fill"></i> Run
                    </button>
                    <button type="button" id="btnStop" class="btn btn-sm btn-danger" title="Detener" disabled>
                        <i class="bi bi-stop-fill"></i> Stop
                    </button>
                </div>

                <div class="btn-group me-2">
                    <button type="button" id="btnSave" class="btn btn-sm btn-info" title="Guardar (Ctrl+S)">
                        <i class="bi bi-save"></i> Save
                    </button>
                    <button type="button" id="btnBeautify" class="btn btn-sm btn-outline-light" title="Formatear código">
                        <i class="bi bi-braces"></i> Beautify
                    </button>
                </div>
            </div>

            <div class="d-flex align-items-center">
                <label for="languageId" class="form-label me-2 mb-0 small text-light">Language</label>
                <select id="languageId" name="languageId" class="form-select form-select-sm w-auto bg-dark text-white border-secondary">
                    <option value="52">C</option>
                    <option value="54">C++</option>
                    <option value="62">Java</option>
                    <option value="71">Python</option>
                    <option value="63">JavaScript</option>
                </select>
                <button type="button" class="btn btn-sm text-light ms-2" title="Configuración">
                    <i class="bi bi-gear-fill"></i>
                </button>
            </div>
        </div>

        <!-- Contenedor principal del editor ESCRIBE TU CODIGO EN ¨¨--> 
        <div class="tab-content" style="height: calc(100% - 85px); position: relative; background-color: #1e1e1e;">
            <div class="tab-pane fade show active h-100" id="main-content" role="tabpanel" aria-labelledby="main-tab">
                <textarea name="sourceCode" id="codeEditor" class="d-none">@(ViewBag.SourceCode ?? "")</textarea>
                <div id="editor" style="position: absolute; top: 0; bottom: 0; left: 0; right: 0;"></div>
            </div>
        </div>

        <!-- Panel inferior con pestañas para resultados -->
        <div class="card-footer bg-dark text-white p-0">
            <ul class="nav nav-tabs nav-tabs-dark border-bottom-0" id="resultTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active py-1 px-3" id="output-tab" data-bs-toggle="tab" data-bs-target="#output-content" type="button">
                        <i class="bi bi-terminal-fill me-1"></i> Resultados
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link py-1 px-3" id="input-tab" data-bs-toggle="tab" data-bs-target="#input-content" type="button">
                        <i class="bi bi-arrow-down-square me-1"></i> Input
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link py-1 px-3" id="stderr-tab" data-bs-toggle="tab" data-bs-target="#stderr-content" type="button">
                        <i class="bi bi-exclamation-triangle me-1"></i> Error
                    </button>
                </li>
            </ul>

            <div class="tab-content border-top border-secondary">
                <div class="tab-pane fade show active" id="output-content" role="tabpanel">
                    <div class="p-2 small" style="min-height: 100px; max-height: 150px; overflow-y: auto;">
                        @if (ViewBag.Resultados != null)
                        {
                            <ul class="list-unstyled mb-0">
                                @foreach (var resultado in ViewBag.Resultados)
                                {
                                    <li class="p-2 @(resultado.ToString().Contains("✅") ? "text-success" : resultado.ToString().Contains("❌") ? "text-danger" : "text-white")">
                                        @resultado
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <div class="text-white-50">Ejecuta tu código para ver los resultados...</div>
                        }
                    </div>
                </div>
                <div class="tab-pane fade" id="input-content" role="tabpanel">
                    <div class="p-2 small" style="min-height: 100px; max-height: 150px; overflow-y: auto;">
                        <div class="mb-2">Casos de prueba:</div>
                        <ul class="list-unstyled mb-0">
                            @foreach (var caso in Model.CasosDePrueba)
                            {
                                <li class="p-1 text-white">
                                    <strong>Caso @caso.Id:</strong>
                                    <pre class="mb-0 text-light bg-dark p-1">@caso.Input</pre>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="tab-pane fade" id="stderr-content" role="tabpanel">
                    <div class="p-2 small" style="min-height: 100px; max-height: 150px; overflow-y: auto;">
                        <pre id="errorText" class="mb-0 text-danger">@(ViewBag.Error ?? "")</pre>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

<!-- ACE Editor -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/ace/1.32.0/theme-monokai.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.32.0/ace.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.32.0/ext-language_tools.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.32.0/ext-beautify.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.32.0/ext-modelist.min.js"></script>

<style>
    /* Estilos del editor - ARREGLADOS */
    #editor {
        font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
    }

    .ace_editor {
        font-family: 'Consolas', 'Monaco', 'Courier New', monospace !important;
        line-height: 1.5 !important;
    }

    /* Estilos simplificados para evitar conflictos */
    .ace_gutter {
        background-color: #1a1a1a !important;
        color: #7a7a7a !important;
    }

    /* Eliminar estilos que causan conflictos */
    .ace_scroller, .ace_content, .ace_text-layer {
        /* Dejar que ACE maneje automáticamente estos posicionamientos */
    }

    /* Estilo principal */
    .ace-monokai {
        background-color: #1e1e1e !important;
    }

    /* Estilos para las pestañas */
    .nav-tabs-dark .nav-link {
        color: #adb5bd;
        background-color: #252525;
        border: 1px solid #444;
        border-bottom: none;
        margin-right: 2px;
        font-size: 0.85rem;
    }

        .nav-tabs-dark .nav-link:hover {
            color: #fff;
            background-color: #2c2c2c;
            border-color: #666;
        }

        .nav-tabs-dark .nav-link.active {
            color: #fff;
            background-color: #1e1e1e;
            border-color: #666;
            border-bottom-color: transparent;
        }

    /* Estilos para los botones del toolbar */
    .btn-group > .btn {
        border-radius: 3px;
        margin-right: 2px;
    }

    /* Estilo para el input del nombre de archivo */
    #fileNameInput {
        transition: all 0.3s;
    }

        #fileNameInput:focus {
            border-color: #6c757d;
            box-shadow: 0 0 0 0.25rem rgba(108, 117, 125, 0.25);
        }

    /* Ajustes para el scrollbar */
    .ace_scrollbar-v {
        width: 10px !important;
    }

        .ace_scrollbar-v::-webkit-scrollbar {
            width: 8px;
        }

        .ace_scrollbar-v::-webkit-scrollbar-thumb {
            background-color: #555 !important;
            border-radius: 10px;
        }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Inicialización del editor ACE con configuraciones cuidadosamente ajustadas
        const editor = ace.edit("editor", {
            theme: "ace/theme/monokai",
            mode: "ace/mode/c_cpp",
            fontSize: "14px",
            showPrintMargin: false,
            highlightActiveLine: true,
            enableBasicAutocompletion: true,
            enableLiveAutocompletion: true,
            enableSnippets: true,
            fixedWidthGutter: true,
            useWorker: true,
            displayIndentGuides: true,
            scrollPastEnd: 0.5,
            tabSize: 4,
            useSoftTabs: true,
            indentedSoftWrap: false,
            // Importante: evitar wrapping para mejor alineación
            wrap: false,
            // Mejorar el manejo de cursor
            cursorStyle: "ace",
            // Asegurarse que el cursor esté visible
            showInvisibles: false,
            // Mejorar la experiencia de escritura
            behavioursEnabled: true,
            // Desactivar animaciones que puedan afectar el posicionamiento
            animatedScroll: false
        });

        // Configuración crítica para sincronización perfecta
        editor.$blockScrolling = Infinity;
        editor.renderer.setScrollMargin(10, 10);

        // Corrección importante: establecer un estado inicial limpio y forzar actualización completa
        editor.session.setValue(document.getElementById('codeEditor').value /*|| "// Escribe tu código aquí"*/);
        editor.clearSelection();
        editor.renderer.updateFull(true);

        // Sincronizar textarea con el editor ACE
        editor.session.on('change', function() {
            document.getElementById('codeEditor').value = editor.getValue();
        });

        // Cambiar modo de lenguaje
        const languageMap = {
            '52': 'c_cpp',  // C
            '54': 'c_cpp',  // C++
            '62': 'java',   // Java
            '71': 'python', // Python
            '63': 'javascript' // JavaScript
        };

        const extensions = {
            '52': '.c',
            '54': '.cpp',
            '62': '.java',
            '71': '.py',
            '63': '.js'
        };

        document.getElementById('languageId').addEventListener('change', function() {
            const lang = this.value;
            editor.session.setMode(`ace/mode/${languageMap[lang]}`);

            // Actualizar extensión del nombre de archivo
            const fileNameInput = document.getElementById('fileNameInput');
            const currentName = fileNameInput.value.split('.')[0];
            fileNameInput.value = currentName + extensions[lang];

            // Forzar redibujado después de cambiar el modo
            setTimeout(() => {
                editor.renderer.updateFull(true);
            }, 50);
        });

        // Función para formatear el código
        document.getElementById('btnBeautify').addEventListener('click', function() {
            const beautify = ace.require("ace/ext/beautify");
            beautify.beautify(editor.session);
        });

        // Función para guardar el código
        document.getElementById('btnSave').addEventListener('click', function() {
            const blob = new Blob([editor.getValue()], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = document.getElementById('fileNameInput').value;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        });

        // Función para detener ejecución (simulada)
        document.getElementById('btnStop').addEventListener('click', function() {
            document.getElementById('btnRun').disabled = false;
            this.disabled = true;

            document.getElementById('errorText').textContent = 'Ejecución detenida por el usuario.';
            document.getElementById('stderr-tab').click();
        });

        // Manejo del formulario con AJAX para mejorar la experiencia de usuario
        document.getElementById('codeForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const btnRun = document.getElementById('btnRun');
            const btnStop = document.getElementById('btnStop');

            btnRun.disabled = true;
            btnStop.disabled = false;
            btnRun.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Running...';

            const formData = new FormData(this);

            fetch(this.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.text())
            .then(html => {
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const resultadosContainer = doc.querySelector('#output-content');

                if (resultadosContainer) {
                    document.getElementById('output-content').innerHTML = resultadosContainer.innerHTML;
                    document.getElementById('output-tab').click();
                }

                const errorContainer = doc.querySelector('#stderr-content');
                if (errorContainer) {
                    document.getElementById('stderr-content').innerHTML = errorContainer.innerHTML;
                    if (errorContainer.textContent.trim() !== '') {
                        document.getElementById('stderr-tab').click();
                    }
                }
            })
            .catch(error => {
                document.getElementById('errorText').textContent = 'Error al comunicarse con el servidor: ' + error;
                document.getElementById('stderr-tab').click();
            })
            .finally(() => {
                btnRun.disabled = false;
                btnStop.disabled = true;
                btnRun.innerHTML = '<i class="bi bi-play-fill"></i> Run';
            });
        });

        // Atajos de teclado
        editor.commands.addCommand({
            name: 'run',
            bindKey: {win: 'F9', mac: 'F9'},
            exec: function() {
                document.getElementById('btnRun').click();
            }
        });

        editor.commands.addCommand({
            name: 'save',
            bindKey: {win: 'Ctrl-S', mac: 'Command-S'},
            exec: function() {
                document.getElementById('btnSave').click();
                return true;
            }
        });

        // IMPORTANTE: Asegurar el correcto redimensionamiento del editor
        function resizeEditor() {
            editor.resize(true); // Forzar resize completo
            editor.renderer.updateFull(true); // Actualización completa del renderizado
        }

        // Forzar un redibujado después de cargar completamente
        setTimeout(resizeEditor, 100);

        // Manejar cambios de tamaño de ventana
        window.addEventListener('resize', resizeEditor);

        // Evento adicional para forzar actualización al hacer clic en el editor
        document.getElementById('editor').addEventListener('click', function() {
            setTimeout(() => {
                editor.renderer.updateFull(true);
            }, 10);
        });
    });
</script>